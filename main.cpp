#include <iostream>
#include <cstdlib>
using namespace std;

void p13()// Присваивает s сумму цифр числа a
{
    int n, a, s, k;// Создание переменных
    cin >> a;//Ввод значения a
    for (n = a, s = 0; n != 0; n = n / 10)//Пока n не равен 0, то расматриваем число n с шагом n div 10
    {
        k = n % 10;//Присваивание последного разряда числа n переменной k
        s = s + k;//Накопление суммы
    }
    cout << s;// Вывод s
}

void p14()// Нахождение наибольшей цифры в числе a
{
    int n, a, s, k;
    cin >> a;
    for (n = a, s = 0; n != 0; n = n / 10)//Пока n не равен 0, то расматриваем число n с шагом n div 10
    {
        k = n % 10;//Присваивание последного разряда числа n переменной k
        if (k > s) s = k;//Если последний разряд больше прыдедущего большего разряда, то s равен k
    }
    cout << s;
}

void p15()// Присваивает числу s отзеркаленное число a, но если заканчивается на 0, то 0 не выводится
{
    int n, a, s, k;
    cin >> a;
    for (n = a, s = 0; n != 0; n = n / 10)//Пока n не равен 0, то расматриваем число n с шагом n div 10
    {
        k = n % 10; //Присваивание последного разряда числа n переменной k
        s = s * 10 + k;// Домножает на 10 предыдущий разряд и прибавляет присвоенный в переменную k
    }
    cout << s;
}

void p16()// Присваивает отзеркаленное число a по одному разряду соответсвенно порядковому номеру массива.(Если a оканчивается на 0)
{
    int i, n, a, A[100];// Создание перменных и массива
    cin >> a;
    for (i = 0, n = a; n != 0; i++, n = n / 10);//Пока n не равен 0, то расматриваем число n с шагом n div 10 и i=i+1
    for (A[i--] = -1, n = a; n != 0; i--, n = n / 10)//
    {
        A[i] = n % 10;// Присвоение
        cout << A[i];
    }
}

void p17()// Выводит числа a, которые равны кубу суммы цифр числа
{
    int j, a, s, n, k, A[100];
    for (j = 0, a = 10; a < 30000; a++) {// Расматриваем все числа от 10 до 30000
        for (n = a, s = 0; n != 0; n = n / 10) {//Цикл для нахождения суммы цифр числа
            k = n % 10;
            s = s + k;
        }
        if (a == s * s * s) {// Если сумма цифр числа в кубе равна самому числу, то сохранить его в массиве
            A[j++] = a;
            cout << a << '\n';
        }
    }
}

void p18()// Выводит палиндромы
{
    int j, a, v, n, s, k, A[100];
    cin >> v;
    for (j = 0, a = 10; a < v; a++) {// Расматриваем все числа от 10 до v
        for (n = a, s = 0; n != 0; n = n / 10)//Цикл для отзеркаливания числа
        {
            k = n % 10;
            s = s * 10 + k;
        }
        if (a == s) {// Если число равно себе же отзекаленному, то сохраняем его в массиве
            A[j++] = a;
            cout << a << '\n';
        }
    }
}

void p19()// Удаляет отрицательные числа из массива
{
    int i, n, j, A[100];
    cin >> n;
    for (j = 0; j < n; j++) {// Создаём элемент массива через rand() подключив библиотеку <cstdlib>
    A[j] = 15000 - rand();
    cout << A[j] << '\n';
    }
    for (i = 0; i < n; i++) {//Рассматриваем n элементов массив
        if (A[i] < 0) {// Если элемент отрицательный, то его удаляем, сокращая количество всех элементов на 1
            for (j = i; j < n - 1; j++) // Чтобы не потерять последний элемент, перетаскиваем элементы от удалённого элемента влево с шагом равным одному
                A[j] = A[j + 1];
            n--;
            i--;
        }
    }
    cout << '\n';
    for (j = 0; j < n; j++)// Выводим массив
        cout << A[j] << '\n';
}

void p20()// Находит и удаляет наибольшее значение путем сортировки
{
    int n, i, k, j, A[100];
    cin >> n;
    for (i = 0; i < n; i++) {// Создаём массив
        A[i] = rand();
        cout << A[i] << '\n';
    }
    for (i = 1, k = 0; i < n; i++)// Находит порядковый номер наибольшего значения в массиве
        if (A[i] > A[k]) k = i;
    for (j = k; j < n - 1; j++)// Удаляет наибольший элемент и перетаскивает элементы от удалённого элемента влево с шагом равным одному
        A[j] = A[j + 1];
    n--;// Сокращаем количество элементов на один
    cout << '\n';
    for (i = 0; i < n; i++)// Вывод массива
        cout << A[i] << '\n';
}

void p21()// Находит простые числа
{
    int i, a, v, n, A[100];
    cin >> v;
    for (i = 0, a = 2; a < v; a++) {// Рассматрваем a от 2 до v
        for (n = 2; n < a; n++)// Проверяем кратность числа a
        {
            if (a % n == 0) break;// Если есть кратное, то переходим к следующему значению числа a
        }
        if (n == a) A[i++] = a;
    }
    A[i] = 0;// Последний элемент массива будет 0
    for (i = 0; A[i] != 0; i++)// Выводим массив до последнего элемента
        cout << A[i] << '\n';
}

void p22()// Находит простые числа
{
    int i, a, v, s, n, A[100];
    cin >> v;
    for (i = 0, a = 2; a < v; a++) {// Рассматрваем a от 2 до v
        for (s = 0, n = 2; n < a; n++)// Проверяем кратность числа a
            if (a % n == 0) {// Если есть кратное, то s равен 1 и не пройдя следующее условие переходим к следующему значению a
                s = 1; break;
            }
        if (s == 0) A[i++] = a;
    }
    A[i] = 0;// Последний элемент массива будет 0
    for (i = 0; A[i] != 0; i++)// Выводим массив до последнего элемента
        cout << A[i] << '\n';
}

void p23()
{
    int j, i, n, m, A[100], B[100];// Записывает в массив B из массива A простые числа
    cin >> n;
    for (i = 0; i < n; i++) {
        A[i] = rand();
        cout << A[i] << ' ';
    }
    for (j = 0, i = 0; i < n; i++) {
        for (m = 2; m < A[i]; m++)
        {
            if (A[i] % m == 0) break;
        }
        if (m == A[i]) B[j++] = A[i];
    }
    B[j] = 0;
    for (i = 0; B[i] != 0; i++)
        cout << B[i] << ' ';
}
void p24()
{
    int j, i, n, s, m, A[100], B[100];
    cin >> n;
    for (i = 0; i < n; i++) {
        A[i] = rand();
        cout << A[i] << ' ';
    }
    for (j = 0, i = 0; i < n; i++) {
        for (s = 0, m = 2; m < A[i]; m++)
            if (A[i] % m == 0) { s = 1; break; }
        if (s == 0) B[j++] = A[i];
    }
    B[j] = 0;
    for (i = 0; B[i] != 0; i++)
        cout << B[i] << ' ';
}
void p25()
{
    int i, n, m, j, A[100];
    cin >> n;
    for (i = 0; i < n; i++) {
        A[i] = rand();
        cout << A[i] << ' ';
    }
    for (i = 0; i < n; i++) {
        for (m = 2; m < A[i]; m++)
        {
            if (A[i] % m == 0) break;
        }
        if (m == A[i]) {
            for (j = i; j < n - 1; j++) A[j] = A[j + 1];
            n--;
            i--;
        }
    }
}
int main()
{
    p22();
    return 0;
}